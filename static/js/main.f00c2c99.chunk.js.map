{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAaK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW7C,OAJIR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KAuBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,4BAAuBhB,IAAaJ,EAASO,UAAY,YAClEe,QA3BuB,WAC7BH,EAAYnB,EAASO,WAuBjB,iCAQA,wBACEc,KAAK,SACLD,UAAS,4BAAuBhB,IAAaJ,EAASY,QAAU,YAChEU,QA/BiB,WACvBH,EAAYnB,EAASY,SA2BjB,4BAQA,wBACES,KAAK,SACLD,UAAS,6BAAwBf,GAAc,YAC/CiB,QAnCkB,WAEtBL,GADEZ,IA+BA,sBAQED,IAAaJ,EAASkB,MAAQb,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QApCS,WACjBH,EAAYnB,EAASkB,MACrBD,GAAc,IA+BR,sBAUJ,6BACGf,EAAkBD,EACjB,CAAEG,WAAUC,eAAckB,KAAI,SAAAC,GAAI,OAChC,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f00c2c99.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/indent */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      visibleGoods;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const hadleClickAlphabetical = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const hadleClickLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const hadleClickReverse = () => {\n    if (isReversed) {\n      setIsReversed(false);\n    } else {\n      setIsReversed(true);\n    }\n  };\n\n  const hadleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={hadleClickAlphabetical}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={hadleClickLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={hadleClickReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={hadleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer,\n          { sortType, isReversed }).map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}